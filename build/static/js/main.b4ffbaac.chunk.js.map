{"version":3,"sources":["services/Api.js","pages/GameS.js","pages/index.js","router.js","serviceWorker.js","index.js","assets/x.png","assets/o.png","assets/old.png"],"names":["ip","App","match","useState","gameid","setGameid","game","setGame","pontuacao","setPontuacao","playerTime","setPlayerTime","parts","setParts","setSituation","emit","setEmit","playerid","setPlayerid","you","setYou","positionClick","command","position","i","j","params","imgEspace","elem","imgX","imgO","useEffect","socket","io","query","on","players","situation","id","className","src","alt","imgOld","onClick","length","href","console","log","setGameId","a","axios","get","response","data","window","location","alert","e","preventDefault","error","type","newRoom","onSubmit","placeholder","value","onChange","target","Routes","path","exact","component","Index","GameS","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.b4ffbaac.chunk.js","sourcesContent":["const ip = 'https://jogodavelhaserver.herokuapp.com'\n//const ip = 'http://localhost:3333'\n\nexport default ip ","import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client'\nimport axios from 'axios'\n\nimport './App.css';\nimport ip from '../services/Api'\nimport imgX from '../assets/x.png'\nimport imgO from '../assets/o.png'\nimport imgOld from '../assets/old.png'\n\nfunction App({ match }) {\n\n    const [gameid, setGameid] = useState('')\n    const [game, setGame] = useState([])\n    const [pontuacao, setPontuacao] = useState({})\n    const [playerTime, setPlayerTime] = useState(null)\n    const [parts, setParts] = useState({})\n    // eslint-disable-next-line no-unused-vars\n    const [situation, setSituation] = useState([])\n    const [emit, setEmit] = useState(() => { })\n    const [playerid, setPlayerid] = useState('')\n    const [you, setYou] = useState(1)\n\n    useEffect(() => {\n        setGameid(match.params.gameid)\n        const socket = io(ip, {\n            query: { gameid: match.params.gameid }\n        })\n        socket.on('setup', (command) => {\n            setGame(command.game)\n            setPontuacao(command.pontuacao)\n            setPlayerTime(command.playerTime)\n            setParts(command.parts)\n\n        })\n\n        socket.on('reset-game', (command) => {\n            setGame(command.game)\n            setPlayerTime(command.playerTime)\n        })\n\n        socket.on('add-player', (command) => {\n            setGame(command.game)\n            setPlayerTime(command.playerTime)\n            setParts(command.players)\n        })\n\n        socket.on('attempt', (command) => {\n            setGame(command.game)\n            setPlayerTime(command.playerTime)\n            setPontuacao(command.pontuacao)\n            setSituation(command.situation)\n        })\n\n        socket.on('connect', () => {\n            setPlayerid(socket.id)\n            if (parts[1] === playerid) {\n                setYou(1)\n            } else {\n                setYou(2)\n            }\n        })\n\n        socket.on('remove-player', (command) => {\n            setPlayerTime(command.playerTime)\n        })\n\n        setEmit(socket)\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(() => {\n        if (parts[1] === playerid) {\n            setYou(1)\n        } else {\n            setYou(2)\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [parts])\n\n    function positionClick(command) {\n        emit.emit('move', {\n            position: {\n                i: command.i,\n                j: command.j\n            },\n            gameid: match.params.gameid\n        })\n    }\n\n    function addBot(){\n        emit.emit(\"add-bot\", {\n            gameid: gameid\n        })\n        console.log('addbot')\n    }\n\n\n    function newGame() {\n        emit.emit('reset', {\n            gameid: match.params.gameid\n        })\n    }\n\n    function imgEspace({ elem }) {\n        if (elem === 1) {\n            return imgX\n        } else {\n            if (elem === 2) {\n                return imgO\n            }\n        }\n        return\n    }\n\n    return (\n        <div className=\"mega\">\n            <div className=\"container\">\n                <div className=\"pontuacao\">\n                    <p id='x'><img src={imgX} alt='X' /> {pontuacao[1]}</p>\n                    <p id='old'><img src={imgOld} alt='X' />{pontuacao[3]}</p>\n                    <p id='o'><img src={imgO} alt='O' /> {pontuacao[2]}</p>\n                </div>\n                {playerTime === 3 ? (\n                    <div className=\"New\" onClick={() => newGame()}>\n                        <p>Come√ßar de Novo</p>\n                    </div>\n                ) : (playerTime === you) ? (\n                    <div className=\"turn\">Sua vez</div>\n                ) : (<div className=\"turn\">Vez do amigo</div>)}\n                <div className='container-game'>\n                    {\n                        game.length > 0 ? (\n                            <div className=\"tabuleiro\">\n                                <div id=\"a1\" className=\"espaco\" onClick={() => positionClick({ i: 0, j: 0 })}><img src={imgEspace({ elem: game[0][0] })} alt='' /></div>\n                                <div id=\"a2\" className=\"espaco\" onClick={() => positionClick({ i: 0, j: 1 })}><img src={imgEspace({ elem: game[0][1] })} alt='' /></div>\n                                <div id=\"a3\" className=\"espaco\" onClick={() => positionClick({ i: 0, j: 2 })}><img src={imgEspace({ elem: game[0][2] })} alt='' /></div>\n\n                                <div id=\"b1\" className=\"espaco\" onClick={() => positionClick({ i: 1, j: 0 })}><img src={imgEspace({ elem: game[1][0] })} alt='' /></div>\n                                <div id=\"b2\" className=\"espaco\" onClick={() => positionClick({ i: 1, j: 1 })}><img src={imgEspace({ elem: game[1][1] })} alt='' /></div>\n                                <div id=\"b3\" className=\"espaco\" onClick={() => positionClick({ i: 1, j: 2 })}><img src={imgEspace({ elem: game[1][2] })} alt='' /></div>\n\n                                <div id=\"c1\" className=\"espaco\" onClick={() => positionClick({ i: 2, j: 0 })}><img src={imgEspace({ elem: game[2][0] })} alt='' /></div>\n                                <div id=\"c2\" className=\"espaco\" onClick={() => positionClick({ i: 2, j: 1 })}><img src={imgEspace({ elem: game[2][1] })} alt='' /></div>\n                                <div id=\"c3\" className=\"espaco\" onClick={() => positionClick({ i: 2, j: 2 })}><img src={imgEspace({ elem: game[2][2] })} alt='' /></div>\n                            </div>\n                        ) : (\n                                <div />\n                            )\n                    }\n                </div>\n                <div className='player'>\n                    <p>Voc√™ √©</p>\n                    <img src={imgEspace({ elem: you })} alt={you === 1 ? \"X\" : \"o\"} />\n                </div>\n                {playerTime === 0 ? (\n                    <div className=\"waitingPlayer\">\n                        <p>Aguardando outro jogador</p>\n                        <p>Mande esse c√≥digo para seu Amigo</p>\n                        <div className='link'>\n                            <a >{`${match.params.gameid}`}</a>\n                        </div>\n                        <p>Ou mande esse link</p>\n                        <div className='link'>\n                            <a href={`https://jogodaveia.herokuapp.com/${gameid}/game`} >{`https://jogodaveia.herokuapp.com/${gameid}/game`}</a>\n                        </div>\n                        <p>Se preferir</p>\n                        <div><button className=\"bot\" onClick={() => addBot()}>Jogar contra Bot</button></div>\n                    </div>\n                ) : (<div />)}\n            </div>\n        </div >\n    );\n}\n\nexport default App;\n","import React, { useState } from 'react';\nimport ip from '../services/Api'\nimport axios from 'axios'\n\nimport './Index.css'\n\nfunction App() {\n\n    const [gameid, setGameId] = useState('')\n\n    async function newRoom(){\n        const response = await axios.get(`${ip}/newroom`)\n        const {gameid} = response.data\n        if (!gameid) {\n            alert(\"Error 404\")\n        } else {\n            window.location.href = `${gameid}/game`\n        }\n    }\n\n    async function testRoom(e) {\n        e.preventDefault()\n        const response = await axios.get(`${ip}/room?gameid=${gameid}`)\n        const {error} = response.data\n        if (error) {\n            alert(\"Sala Invalida\")\n        } else {\n            window.location.href = `${gameid}/game`\n        }\n    }\n\n    return (\n        <div className=\"backfround\">\n            <div className=\"login-container\">\n                <div className=\"form\">\n                    <h1>Bem vindo!</h1>\n                    <a type=\"button\" onClick={()=> newRoom()}>Criar sala</a>\n                </div>\n                <form onSubmit={testRoom}>\n                    <h1>Quer entrar na sala de um amigo?</h1>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Insira o Codigo do game Aqui\"\n                        value={gameid}\n                        onChange={e => setGameId(e.target.value)}\n                    />\n                    <button type=\"submit\">Entrar</button>\n                </form>\n            </div>\n            <a href=\"https://github.com/luiss1569\"><p>Desenvolvido por Luis Ricardo</p></a>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react'\nimport {BrowserRouter, Route} from 'react-router-dom'\n\nimport GameS from './pages/GameS'\nimport Index from './pages/index'\n\nexport default function Routes(){\n    return(\n        <BrowserRouter>\n            <Route path=\"/\" exact component={Index}/> \n            <Route path=\"/:gameid/game\" exact component={GameS}/>\n        </BrowserRouter>\n    )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Router from './router';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/x.47f2d81d.png\";","module.exports = __webpack_public_path__ + \"static/media/o.d4029cde.png\";","module.exports = __webpack_public_path__ + \"static/media/old.1736ec82.png\";"],"sourceRoot":""}